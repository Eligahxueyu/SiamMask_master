[2020-04-29 13:25:05,358-rk0-train_siammask.py#152] 
PyTorch version: 0.4.1
Is debug build: No
CUDA used to build PyTorch: None

OS: Mac OSX 10.14.6
GCC version: Could not collect
CMake version: Could not collect

Python version: 3.6
Is CUDA available: No
CUDA runtime version: No CUDA
GPU models and configuration: No CUDA
Nvidia driver version: No CUDA
cuDNN version: No CUDA

Versions of relevant libraries:
[pip] Could not collect
[conda] torch                     0.4.1                    pypi_0    pypi
[conda] torchvision               0.2.1                    pypi_0    pypi
        OpenCV (3.4.3)
[2020-04-29 13:25:05,362-rk0-train_siammask.py#153] Namespace(arch='', batch=8, clip=10.0, config='config.json', epochs=8, log='logs/log.txt', log_dir='board', lr=0.001, momentum=0.9, pretrained='', print_freq=10, resume='', save_dir='snapshot', start_epoch=0, weight_decay=0.0001, workers=0)
[2020-04-29 13:25:05,363-rk0-train_siammask.py#156] config 
{
    "network": {
        "arch": "Custom"
    },
    "hp": {
        "instance_size": 255,
        "base_size": 8
    },
    "lr": {
        "feature_lr_mult": 1.0,
        "rpn_lr_mult": 1.0,
        "mask_lr_mult": 1.0,
        "type": "log",
        "start_lr": 0.005,
        "end_lr": 0.0025,
        "warmup": {
            "start_lr": 0.001,
            "end_lr": 0.005,
            "type": "step",
            "step": 1,
            "epoch": 5
        }
    },
    "loss": {
        "weight": [
            1.0,
            1.2,
            36
        ],
        "reg": {
            "loss": "L1Loss"
        },
        "cls": {
            "split": true
        }
    },
    "train_datasets": {
        "datasets": {
            "coco": {
                "root": "../../data/coco/crop511",
                "anno": "../../data/coco/train2017.json",
                "frame_range": 1
            }
        },
        "template_size": 127,
        "search_size": 255,
        "base_size": 8,
        "size": 25,
        "num": 6000,
        "augmentation": {
            "template": {
                "shift": 4,
                "scale": 0.05
            },
            "search": {
                "shift": 64,
                "scale": 0.18,
                "blur": 0.18
            },
            "neg": 0.2,
            "gray": 0.25
        }
    },
    "val_datasets": {
        "datasets": {
            "vid": {
                "root": "../../data/coco/crop511",
                "anno": "../../data/coco/val2017.json",
                "num_use": 1000
            }
        },
        "template_size": 127,
        "search_size": 255,
        "size": 17,
        "num": 10,
        "augmentation": {
            "template": {
                "shift": 0,
                "scale": 0.0
            },
            "search": {
                "shift": 12,
                "scale": 0.18
            },
            "neg": 0,
            "gray": 0
        }
    },
    "anchors": {
        "stride": 8,
        "ratios": [
            0.33,
            0.5,
            1,
            2,
            3
        ],
        "scales": [
            8
        ],
        "round_dight": 0
    },
    "clip": {
        "feature": 10.0,
        "rpn": 10.0,
        "split": false
    }
}
[2020-04-29 13:25:05,365-rk0-train_siammask.py# 85] build train dataset
[2020-04-29 13:25:05,367-rk0-siam_mask_dataset.py# 38] loading ../../data/coco/train2017.json
[2020-04-29 13:25:05,550-rk0-siam_mask_dataset.py# 84] ../../data/coco/train2017.json loaded.
[2020-04-29 13:25:05,553-rk0-siam_mask_dataset.py#151] SubDataSet coco start-index 0 select [4952/4952] path {}.{}.{}.jpg
[2020-04-29 13:25:05,606-rk0-siam_mask_dataset.py#578] shuffle done!
[2020-04-29 13:25:05,607-rk0-siam_mask_dataset.py#579] dataset length 48000
[2020-04-29 13:25:05,607-rk0-siam_mask_dataset.py#543] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0.25,
    "neg": 0.2,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 6000
}
[2020-04-29 13:25:05,661-rk0-siam_mask_dataset.py#578] shuffle done!
[2020-04-29 13:25:05,661-rk0-siam_mask_dataset.py#579] dataset length 48000
[2020-04-29 13:25:05,661-rk0-train_siammask.py# 92] build val dataset
[2020-04-29 13:25:05,662-rk0-siam_mask_dataset.py# 38] loading ../../data/coco/val2017.json
[2020-04-29 13:25:05,862-rk0-siam_mask_dataset.py# 84] ../../data/coco/val2017.json loaded.
[2020-04-29 13:25:05,866-rk0-siam_mask_dataset.py#151] SubDataSet vid start-index 0 select [1000/4952] path {}.{}.{}.jpg
[2020-04-29 13:25:05,870-rk0-siam_mask_dataset.py#578] shuffle done!
[2020-04-29 13:25:05,871-rk0-siam_mask_dataset.py#579] dataset length 10
[2020-04-29 13:25:05,871-rk0-siam_mask_dataset.py#543] dataset informations: 
{
    "template": 127,
    "search": 255,
    "template_small": false,
    "gray": 0,
    "neg": 0,
    "inner_neg": 0,
    "crop_size": 0,
    "anchor_target": {
        "thr_high": 0.6,
        "thr_low": 0.3,
        "negative": 16,
        "rpn_batch": 64,
        "positive": 16
    },
    "num": 10
}
[2020-04-29 13:25:05,875-rk0-siam_mask_dataset.py#578] shuffle done!
[2020-04-29 13:25:05,875-rk0-siam_mask_dataset.py#579] dataset length 10
[2020-04-29 13:25:05,875-rk0-train_siammask.py#103] build dataset done
[2020-04-29 13:25:06,142-rk0-load_helper.py# 44] load pretrained model from resnet.model
[2020-04-29 13:25:06,259-rk0-load_helper.py# 37] remove prefix 'module.'
[2020-04-29 13:25:06,260-rk0-load_helper.py# 24] [Warning] missing keys: {'layer1.0.bn2.num_batches_tracked', 'layer3.2.bn2.num_batches_tracked', 'layer3.3.bn2.num_batches_tracked', 'layer2.0.downsample.1.num_batches_tracked', 'layer2.1.bn2.num_batches_tracked', 'layer2.3.bn3.num_batches_tracked', 'layer1.0.downsample.1.num_batches_tracked', 'layer2.2.bn3.num_batches_tracked', 'bn1.num_batches_tracked', 'layer1.1.bn1.num_batches_tracked', 'layer2.3.bn1.num_batches_tracked', 'layer3.5.bn3.num_batches_tracked', 'layer3.0.bn3.num_batches_tracked', 'layer3.1.bn1.num_batches_tracked', 'layer3.0.bn2.num_batches_tracked', 'layer3.3.bn3.num_batches_tracked', 'layer2.0.bn2.num_batches_tracked', 'layer1.1.bn2.num_batches_tracked', 'layer2.0.bn1.num_batches_tracked', 'layer2.3.bn2.num_batches_tracked', 'layer3.5.bn2.num_batches_tracked', 'layer2.1.bn1.num_batches_tracked', 'layer3.4.bn3.num_batches_tracked', 'layer3.1.bn3.num_batches_tracked', 'layer3.4.bn2.num_batches_tracked', 'layer3.2.bn3.num_batches_tracked', 'layer3.5.bn1.num_batches_tracked', 'layer1.2.bn3.num_batches_tracked', 'layer3.1.bn2.num_batches_tracked', 'layer2.0.bn3.num_batches_tracked', 'layer3.0.downsample.1.num_batches_tracked', 'layer2.2.bn2.num_batches_tracked', 'layer2.2.bn1.num_batches_tracked', 'layer1.1.bn3.num_batches_tracked', 'layer3.3.bn1.num_batches_tracked', 'layer3.0.bn1.num_batches_tracked', 'layer1.2.bn1.num_batches_tracked', 'layer1.0.bn1.num_batches_tracked', 'layer1.2.bn2.num_batches_tracked', 'layer3.2.bn1.num_batches_tracked', 'layer1.0.bn3.num_batches_tracked', 'layer2.1.bn3.num_batches_tracked', 'layer3.4.bn1.num_batches_tracked'}
[2020-04-29 13:25:06,260-rk0-load_helper.py# 25] missing keys:43
[2020-04-29 13:25:06,260-rk0-load_helper.py# 28] [Warning] unused_pretrained_keys: {'layer4.0.downsample.0.weight', 'layer4.0.downsample.1.bias', 'layer4.1.bn3.running_var', 'layer4.0.bn3.running_mean', 'layer4.2.conv3.weight', 'layer4.1.bn1.weight', 'layer4.0.bn2.bias', 'layer4.2.bn1.running_var', 'layer4.0.bn3.bias', 'layer4.2.bn2.running_var', 'layer4.2.bn3.bias', 'layer4.1.conv2.weight', 'layer4.1.conv1.weight', 'layer4.2.bn1.weight', 'layer4.2.bn1.bias', 'layer4.2.bn2.weight', 'layer4.2.conv1.weight', 'layer4.1.bn1.running_mean', 'layer4.0.bn2.running_mean', 'layer4.2.bn3.running_mean', 'layer4.0.bn1.weight', 'layer4.0.downsample.1.running_var', 'layer4.2.bn2.running_mean', 'layer4.1.bn2.running_mean', 'layer4.0.bn2.weight', 'layer4.1.bn3.bias', 'layer4.0.conv2.weight', 'layer4.0.bn2.running_var', 'layer4.0.bn1.bias', 'layer4.1.bn2.running_var', 'layer4.0.conv1.weight', 'layer4.1.bn2.bias', 'layer4.0.bn1.running_var', 'layer4.0.bn3.running_var', 'layer4.0.downsample.1.running_mean', 'layer4.2.conv2.weight', 'layer4.1.conv3.weight', 'layer4.1.bn3.running_mean', 'layer4.0.conv3.weight', 'layer4.1.bn3.weight', 'layer4.1.bn2.weight', 'layer4.0.bn1.running_mean', 'layer4.0.bn3.weight', 'layer4.2.bn3.weight', 'layer4.2.bn3.running_var', 'layer4.1.bn1.running_var', 'layer4.2.bn2.bias', 'layer4.0.downsample.1.weight', 'layer4.1.bn1.bias', 'layer4.2.bn1.running_mean'}
[2020-04-29 13:25:06,260-rk0-load_helper.py# 29] unused checkpoint keys:50
[2020-04-29 13:25:06,260-rk0-load_helper.py# 30] used keys:215
[2020-04-29 13:25:06,276-rk0-features.py# 92] Current training 0 layers:
	
[2020-04-29 13:25:06,277-rk0-features.py# 92] Current training 1 layers:
	
[2020-04-29 13:25:06,308-rk0-train_siammask.py#171] Custom(
  (upSample): UpsamplingBilinear2d(size=[127, 127], mode=bilinear)
  (features): ResDown(
    (features): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace)
        )
      )
    )
    (downsample): ResDownS(
      (downsample): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (rpn_model): UP(
    (cls): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 10, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (loc): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 20, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
  (mask_model): MaskCorr(
    (mask): DepthCorr(
      (conv_kernel): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (conv_search): Sequential(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
      )
      (head): Sequential(
        (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace)
        (3): Conv2d(256, 3969, kernel_size=(1, 1), stride=(1, 1))
      )
    )
  )
)
[2020-04-29 13:25:06,311-rk0-train_siammask.py#194] (WarmUPScheduler) lr spaces: 
[0.001      0.00137973 0.00190365 0.00262653 0.0036239  0.005
 0.00353553 0.0025    ]
[2020-04-29 13:25:06,330-rk0-train_siammask.py#196] model prepare done
num_per_epoch 750
[2020-04-29 13:25:07,006-rk0-resnet.py<forward>#231] p3 torch.Size([8, 1024, 15, 15])
[2020-04-29 13:25:08,985-rk0-resnet.py<forward>#231] p3 torch.Size([8, 1024, 31, 31])
/opt/anaconda3/envs/siammask/lib/python3.6/site-packages/torch/nn/modules/upsampling.py:225: UserWarning: nn.UpsamplingBilinear2d is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.UpsamplingBilinear2d is deprecated. Use nn.functional.interpolate instead.")
/opt/anaconda3/envs/siammask/lib/python3.6/site-packages/torch/nn/modules/upsampling.py:122: UserWarning: nn.Upsampling is deprecated. Use nn.functional.interpolate instead.
  warnings.warn("nn.Upsampling is deprecated. Use nn.functional.interpolate instead.")
[2020-04-29 13:27:37,439-rk0-train_siammask.py#339] Epoch: [1][10/750] lr: 0.001000	batch_time: 14.721495 (15.109950)	data_time: 0.140268 (0.108093)	rpn_cls_loss: 0.688124 (0.721424)	rpn_loc_loss: 0.451744 (0.920002)	rpn_mask_loss: 0.696983 (0.698310)	siammask_loss: 26.321606 (26.964572)	mask_iou_mean: 0.117941 (0.128886)	mask_iou_at_5: 0.000000 (0.000000)	mask_iou_at_7: 0.000000 (0.000000)
INFO:global:Epoch: [1][10/750] lr: 0.001000	batch_time: 14.721495 (15.109950)	data_time: 0.140268 (0.108093)	rpn_cls_loss: 0.688124 (0.721424)	rpn_loc_loss: 0.451744 (0.920002)	rpn_mask_loss: 0.696983 (0.698310)	siammask_loss: 26.321606 (26.964572)	mask_iou_mean: 0.117941 (0.128886)	mask_iou_at_5: 0.000000 (0.000000)	mask_iou_at_7: 0.000000 (0.000000)
[2020-04-29 13:27:37,440-rk0-log_helper.py#100] Progress: 10 / 6000 [0%], Speed: 15.110 s/iter, ETA 1:01:08 (D:H:M)

INFO:global:Progress: 10 / 6000 [0%], Speed: 15.110 s/iter, ETA 1:01:08 (D:H:M)

